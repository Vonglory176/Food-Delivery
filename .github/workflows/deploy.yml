name: Deploy

on:
  push:
    branches:
      - deployment-tests

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies for frontend
        working-directory: frontend
        run: npm install

      - name: Build frontend project
        working-directory: frontend
        run: npm run build

      - name: Install dependencies for admin
        working-directory: admin
        run: npm install

      - name: Build admin project
        working-directory: admin
        run: npm run build

    #   - name: Prepare directories for deployment # Create directories for deployment
    #     run: |
    #       mkdir -p gh-pages/frontend/dist
    #       mkdir -p gh-pages/admin/dist
    #       cp -R frontend/dist/* gh-pages/frontend/dist/
    #       cp -R admin/dist/* gh-pages/admin/dist/
    #       touch gh-pages/frontend/.nojekyll
    #       touch gh-pages/admin/.nojekyll

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: gh-pages/
        #   path: |
        #     frontend/dist
        #     admin/dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/deployment-tests'

    steps:
      - name: Create gh-pages directory
        run: mkdir -p gh-pages
        
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: gh-pages/ # ./dist

      - name: Prepare directories for deployment
        run: |
          mkdir -p gh-pages/frontend/dist
            if [ -d frontend/dist ] && [ "$(ls -A frontend/dist)" ]; then
              cp -R frontend/dist/* gh-pages/frontend/dist/
            else
              echo "Warning: frontend/dist is empty or does not exist"
            fi
            mkdir -p gh-pages/admin/dist
            if [ -d admin/dist ] && [ "$(ls -A admin/dist)" ]; then
              cp -R admin/dist/* gh-pages/admin/dist/
            else
              echo "Warning: admin/dist is empty or does not exist"
            fi
            touch gh-pages/frontend/.nojekyll
            touch gh-pages/admin/.nojekyll
            
    #   - name: List contents of dist directory
    #     run: ls -la /home/runner/work/Food-Delivery/Food-Delivery/dist

    #   - name: List contents of gh-pages directory
    #     run: ls -la gh-pages
        

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
          
    # steps:
    #   - name: Download artifact
    #     uses: actions/download-artifact@v4
    #     with:
    #       name: production-files
    #       path: ./dist

    #   - name: List downloaded artifacts # Debugging step
    #     run: ls -R ./dist

    # #   - name: Clean up gh-pages branch
    # #     run: |
    # #       git config --global user.name "github-actions"
    # #       git config --global user.email "github-actions@github.com"
    # #       git clone --depth=1 --branch=gh-pages https://github.com/${{ github.repository }} gh-pages
    # #       rm -rf gh-pages/*

    #   - name: Deploy frontend to GitHub Pages
    #     uses: peaceiris/actions-gh-pages@v3
    #     with:
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
    #       publish_dir: ./dist/frontend/dist

    #   - name: Deploy admin to GitHub Pages
    #     uses: peaceiris/actions-gh-pages@v3
    #     with:
    #       github_token: ${{ secrets.GITHUB_TOKEN }}
    #       publish_dir: ./dist/admin/dist

# ORIGINAL ----------------------------------------------

# name: Deploy

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3

#       - name: Setup Node
#         uses: actions/setup-node@v3

#       - name: Install dependencies
#         uses: bahmutov/npm-install@v1

#       - name: Build project
#         run: npm run build

#       - name: Upload production-ready build files
#         uses: actions/upload-artifact@v4
#         with:
#           name: production-files
#           path: ./dist

#   deploy:
#     name: Deploy
#     needs: build
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Download artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: production-files
#           path: ./dist

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./dist